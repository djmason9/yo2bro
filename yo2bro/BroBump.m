//
//  BroBump.m
//  ProjectName
//
//  Created by AuthorName on 4/30/15.
//  Copyright (c) 2015 CompanyName. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "BroBump.h"


@implementation BroBump

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawSperated_handsCanvasWithTop: (CGFloat)top
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Image Declarations
    UIImage* bottom_handImage = [UIImage imageNamed: @"bottom_handImage.png"];
    UIImage* top_handImage = [UIImage imageNamed: @"top_handImage.png"];

    //// Variable Declarations
    CGFloat expression = -1 * top;

    //// bottom_hand Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 32, (expression + 65.04));
    CGContextScaleCTM(context, 0.04, 0.04);

    CGRect bottom_handRect = CGRectMake(0, 0, 1325, 899);
    UIBezierPath* bottom_handPath = [UIBezierPath bezierPathWithRect: bottom_handRect];
    CGContextSaveGState(context);
    [bottom_handPath addClip];
    CGContextScaleCTM(context, 1.0, -1.0);
    CGContextDrawTiledImage(context, CGRectMake(CGRectGetMinX(bottom_handRect), -CGRectGetMinY(bottom_handRect), bottom_handImage.size.width, bottom_handImage.size.height), bottom_handImage.CGImage);
    CGContextRestoreGState(context);

    CGContextRestoreGState(context);


    //// top_hand Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 9, top);
    CGContextScaleCTM(context, 0.04, 0.04);

    CGRect top_handRect = CGRectMake(0, 0, 1420, 877);
    UIBezierPath* top_handPath = [UIBezierPath bezierPathWithRect: top_handRect];
    CGContextSaveGState(context);
    [top_handPath addClip];
    CGContextScaleCTM(context, 1.0, -1.0);
    CGContextDrawTiledImage(context, CGRectMake(CGRectGetMinX(top_handRect), -CGRectGetMinY(top_handRect), top_handImage.size.width, top_handImage.size.height), top_handImage.CGImage);
    CGContextRestoreGState(context);

    CGContextRestoreGState(context);
}

@end
